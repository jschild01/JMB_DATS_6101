loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec) %>%
gather(variable, value) %>%
ggplot(aes(sample = value)) +
geom_qq(color = "steelblue") +
geom_qq_line() +
facet_wrap(~ variable, scales = "free") + # Free scales so the graphs are readable
labs(title = "Q-Q Plots of Numeric Variables", x = "Theoretical", y = "Sample") +
theme_minimal()
loans$revol.bal=log(loans$revol.bal)
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec) %>%
gather(variable, value) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "steelblue", color = "black") +
facet_wrap(~ variable, scales = "free") + # Free scales so the graphs are readable
labs(title = "Histograms of Numeric Variables", x = "Value", y = "Count") +
theme_minimal()
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec) %>%
gather(variable, value) %>%
ggplot(aes(x = value)) +
geom_boxplot(fill = "steelblue", color = "black",
outlier.size = 2, outlier.alpha = 0.2) + # Translucent and larger outliers to help with overplotting
facet_wrap(~ variable, scales = "free") + # Free scales so the graphs are readable
labs(title = "Boxplots of Numeric Variables", x = "Value") +
theme_minimal() +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
# By gathering the variables we want to see into a long format with the gather() function, we can then create a boxplot
# for each variable using the facet_wrap() function in ggplot2. We can see this for each credit policy value by excluding
# it in the gather() function.
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec, credit.policy) %>%
gather(variable, value, -credit.policy) %>%
ggplot(aes(x = value, y = as.logical(credit.policy), fill = as.logical(credit.policy))) +
geom_boxplot(outlier.size = 2, outlier.alpha = 0.2) +  # Translucent and larger outliers to help with overplotting
guides(fill = guide_legend(reverse = TRUE)) + # So the legend order matches the order in the graphs
facet_wrap(~ variable, scales = "free_x") + # Free x scale so the graphs are readable
labs(title = "Boxplots of Numeric Variables", subtitle = "Comparing `credit.policy` Values",
x = "Value", y = "Count", fill = "Credit Policy") +
theme_minimal()
# By gathering the variables we want to see into a long format with the gather() function, we can then create a boxplot
# for each variable using the facet_wrap() function in ggplot2. We can see this for each not fully paid value by excluding
# it in the gather() function.
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec, not.fully.paid) %>%
gather(variable, value, -not.fully.paid) %>%
ggplot(aes(x = value, y = as.logical(not.fully.paid), fill = as.logical(not.fully.paid))) +
geom_boxplot(outlier.size = 2, outlier.alpha = 0.2) +  # Translucent and larger outliers to help with overplotting
guides(fill = guide_legend(reverse = TRUE)) + # So the legend order matches the order in the graphs
facet_wrap(~ variable, scales = "free_x") + # Free x scale so the graphs are readable
labs(title = "Boxplots of Numeric Variables", subtitle = "Comparing `not.fully.paid` Values",
x = "Value", y = "Count", fill = "Not Fully Paid") +
theme_minimal()
# By gathering the variables we want to see into a long format with the gather() function, we can then create a boxplot
# for each variable using the facet_wrap() function in ggplot2. We can see this for each purpose value by excluding
# it in the gather() function.
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec, purpose) %>%
gather(variable, value, -purpose) %>%
ggplot(aes(x = value, y = purpose, fill = purpose)) +
geom_boxplot(outlier.size = 2, outlier.alpha = 0.2) +
guides(fill = guide_legend(reverse = TRUE)) + # So the legend order matches the order in the graphs
facet_wrap(~ variable, scales = "free_x") + # Free x scale so the graphs are readable
labs(title = "Boxplots of Numeric Variables", subtitle = "Comparing `purpose` Values",
x = "Value", y = "Count", fill = "Purpose") +
theme_minimal()
loans %>%
select(int.rate, installment, log.annual.inc, dti, fico, days.with.cr.line, revol.bal, revol.util,
inq.last.6mths, delinq.2yrs, pub.rec) %>%
gather(variable, value) %>%
ggplot(aes(sample = value)) +
geom_qq(color = "steelblue") +
geom_qq_line() +
facet_wrap(~ variable, scales = "free") + # Free scales so the graphs are readable
labs(title = "Q-Q Plots of Numeric Variables", x = "Theoretical", y = "Sample") +
theme_minimal()
loans$revol.bal=exp(loans$revol.bal)
# This code will perform the z-interval tests we want, but  we will show the results in a nicer looking table format
# For the purpose of these z-interval tests we are assuming that the data is normal and therefore has a standard deviation of 2.31
loadPkg("BSDA")
ztest95rate = z.test(x=loans$int.rate, sigma.x = sd(loans$int.rate)) # default conf.level = 0.95
ztest99rate = z.test(x=loans$int.rate, sigma.x = 2.31, conf.level=0.99 )
ztest50rate = z.test(x=loans$int.rate, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95rate, ztest99rate, ztest50rate), tidy)
tab
png("z1.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95installment = z.test(x=loans$installment, sigma.x = 2.31) # default conf.level = 0.95
ztest99installment = z.test(x=loans$installment, sigma.x = 2.31, conf.level=0.99 )
ztest50installment = z.test(x=loans$installment, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95installment,ztest99installment,ztest50installment), tidy)
tab
png("z2.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95annual = z.test(x=loans$log.annual.inc, sigma.x = 2.31) # default conf.level = 0.95
ztest99annual = z.test(x=loans$log.annual.inc, sigma.x = 2.31, conf.level=0.99 )
ztest50annual = z.test(x=loans$log.annual.inc, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95annual,ztest99annual,ztest50annual), tidy)
tab
png("z3.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95fico = z.test(x=loans$fico, sigma.x = 2.31) # default conf.level = 0.95
ztest99fico = z.test(x=loans$fico, sigma.x = 2.31, conf.level=0.99 )
ztest50fico = z.test(x=loans$fico, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95fico,ztest99fico,ztest50fico), tidy)
tab
png("z4.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95dti = z.test(x=loans$dti, sigma.x = 2.31) # default conf.level = 0.95
ztest99dti = z.test(x=loans$dti, sigma.x = 2.31, conf.level=0.99 )
ztest50dti = z.test(x=loans$dti, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95dti,ztest99dti,ztest50dti), tidy)
tab
png("z5.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95days.with.cr.line = z.test(x=loans$days.with.cr.line, sigma.x = 2.31) # default conf.level = 0.95
ztest99days.with.cr.line = z.test(x=loans$days.with.cr.line, sigma.x = 2.31, conf.level=0.99 )
ztest50days.with.cr.line = z.test(x=loans$days.with.cr.line, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95days.with.cr.line,ztest99days.with.cr.line,ztest50days.with.cr.line), tidy)
tab
png("z6.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95revol.bal = z.test(x=loans$revol.bal, sigma.x = 2.31) # default conf.level = 0.95
ztest99revol.bal = z.test(x=loans$revol.bal, sigma.x = 2.31, conf.level=0.99 )
ztest50revol.bal = z.test(x=loans$revol.bal, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95revol.bal,ztest99revol.bal,ztest50revol.bal), tidy)
tab
png("z7.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95revol.util = z.test(x=loans$revol.util, sigma.x = 2.31) # default conf.level = 0.95
ztest99revol.util = z.test(x=loans$revol.util, sigma.x = 2.31, conf.level=0.99 )
ztest50revol.util = z.test(x=loans$revol.util, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95revol.util,ztest99revol.util,ztest50revol.util), tidy)
tab
png("z8.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95inq.last.6mths = z.test(x=loans$inq.last.6mths, sigma.x = 2.31) # default conf.level = 0.95
ztest99inq.last.6mths = z.test(x=loans$inq.last.6mths, sigma.x = 2.31, conf.level=0.99 )
ztest50inq.last.6mths = z.test(x=loans$inq.last.6mths, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95inq.last.6mths,ztest99inq.last.6mths,ztest50inq.last.6mths), tidy)
tab
png("z9.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95delinq.2yrs = z.test(x=loans$delinq.2yrs, sigma.x = 2.31)# default conf.level = 0.95
ztest99delinq.2yrs = z.test(x=loans$delinq.2yrs, sigma.x = 2.31, conf.level=0.99 )
ztest50delinq.2yrs = z.test(x=loans$delinq.2yrs, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95delinq.2yrs,ztest99delinq.2yrs,ztest50delinq.2yrs), tidy)
tab
png("z10.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
ztest95pub.rec = z.test(x=loans$pub.rec, sigma.x = 2.31) # default conf.level = 0.95
ztest99pub.rec = z.test(x=loans$pub.rec, sigma.x = 2.31, conf.level=0.99 )
ztest50pub.rec = z.test(x=loans$pub.rec, sigma.x = 2.31, conf.level=0.50 )
tab <- map_df(list(ztest95pub.rec,ztest99pub.rec,ztest50pub.rec), tidy)
tab
png("z11.png", height=100, width=700)
p<-tableGrob(tab)
grid.arrange(p)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
## Scatter Plots
Based on the 4 variable correlations we have not looked at yet greater than 0.4 or less than -0.4, these scatter plots allow us to get a better understanding of that correlation.
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
## Scatter Plots
#Based on the 4 variable correlations we have not looked at yet greater than 0.4 or less than -0.4, these scatter plots allow us to get a better understanding of that correlation.
```{r echo=FALSE}
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
## Scatter Plots
#Based on the 4 variable correlations we have not looked at yet greater than 0.4 or less than -0.4, these scatter plots allow us to get a better understanding of that correlation.
loans %>%
ggplot(aes(x = fico, y = int.rate)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Interest Rate vs FICO Score",
x = "FICO Score", y = "Interest Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
theme_minimal()
loans %>%
ggplot(aes(x = int.rate, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs Interest Rate",
x = "Interest Rate", y = "Revolving Line Utilization Rate") +
scale_x_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
loans %>%
ggplot(aes(x = log.annual.inc, y = installment)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Installment vs Log of Annual Income",
x = "Log of Annual Income", y = "Installment") +
theme_minimal()
loans %>%
ggplot(aes(x = fico, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs FICO Score",
x = "FICO Score", y = "Revolving Line Utilization Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
# fit linear model
linear_model <- lm(installmentl~ log.annual.inc, data=df)
# fit linear model
linear_model <- lm(installment~ log.annual.inc, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = fico, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs FICO Score",
x = "FICO Score", y = "Revolving Line Utilization Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
## Scatter Plots
#Based on the 4 variable correlations we have not looked at yet greater than 0.4 or less than -0.4, these scatter plots allow us to get a better understanding of that correlation.
loans %>%
ggplot(aes(x = fico, y = int.rate)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Interest Rate vs FICO Score",
x = "FICO Score", y = "Interest Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
theme_minimal()
# fit linear model
linear_model <- lm(int.rate~ fico, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = int.rate, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs Interest Rate",
x = "Interest Rate", y = "Revolving Line Utilization Rate") +
scale_x_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
# fit linear model
linear_model <- lm(revol.util~ int.rate, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = log.annual.inc, y = installment)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Installment vs Log of Annual Income",
x = "Log of Annual Income", y = "Installment") +
theme_minimal()
# fit linear model
linear_model <- lm(installment~ log.annual.inc, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = fico, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs FICO Score",
x = "FICO Score", y = "Revolving Line Utilization Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
abline(lm(lm(revol.util~ fico, data=df))
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
abline(lm(lm(revol.util~ fico))
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
abline(lm(revol.util~ fico))
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
abline(lm(df$revol.util~ df$fico))
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
abline(lm(revol.util~ fico,data=df))
abline(mC <- lm(revol.util~ fic, data = df)) ## the same as
abline(mC <- lm(revol.util~ fico, data = df)) ## the same as
abline(mC <- lm(revol.util~ fico, data = df)) ## the same as
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti')
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='red')
library(readxl)
loans %>%
ggplot(aes(x = fico, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs FICO Score",
x = "FICO Score", y = "Revolving Line Utilization Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
abline(lm(revol.util~ fico, data=df),col='red')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti')
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='green')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti',color = 'blue')
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='green')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti',hue_pal() = 'blue')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti',pch=19)
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='green')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti',pch=1)
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='green')
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
library(readxl)
# plot a scatter plot
plot(df$revol.util,df$fico,
main='Regression for revol.util~ fico',
xlab='fico',ylab='revol.uti',pch=4)
# plot a regression line
abline(lm(revol.util~ fico, data=df),col='green')
scatterplot(revol.util~ fico, data=df,
xlab="Weight of Car", ylab="Miles Per Gallon",
main="Enhanced Scatter Plot",
labels=row.names(mtcars))
library(car)
scatterplot(revol.util~ fico, data=df,
xlab="Weight of Car", ylab="Miles Per Gallon",
main="Enhanced Scatter Plot",
labels=row.names(mtcars))
scatterplot(revol.util~ fico, data=df)
knitr::opts_chunk$set(echo = TRUE)
library(car)
df <- read.csv("without na.csv")
head(df)
summary(df)
str(df)
sum(is.na(df))
## Scatter Plots
#Based on the 4 variable correlations we have not looked at yet greater than 0.4 or less than -0.4, these scatter plots allow us to get a better understanding of that correlation.
loans %>%
ggplot(aes(x = fico, y = int.rate)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Interest Rate vs FICO Score",
x = "FICO Score", y = "Interest Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
theme_minimal()
# fit linear model
linear_model <- lm(int.rate~ fico, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = int.rate, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs Interest Rate",
x = "Interest Rate", y = "Revolving Line Utilization Rate") +
scale_x_continuous(labels = label_percent(), limits = c(.05, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
# fit linear model
linear_model <- lm(revol.util~ int.rate, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = log.annual.inc, y = installment)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Installment vs Log of Annual Income",
x = "Log of Annual Income", y = "Installment") +
theme_minimal()
# fit linear model
linear_model <- lm(installment~ log.annual.inc, data=df)
# view summary of linear model
summary(linear_model)
loans %>%
ggplot(aes(x = fico, y = revol.util)) +
geom_point(color = "steelblue", alpha = 0.2) +
labs(title = "Revolving Line Utilization Rate vs FICO Score",
x = "FICO Score", y = "Revolving Line Utilization Rate") +
scale_x_continuous(limits = c(600, NA), expand = expansion(mult = c(0, .05))) +
scale_y_continuous(labels = label_percent(scale = 1)) +
theme_minimal()
# fit linear model
linear_model <- lm(revol.util~ fico, data=df)
# view summary of linear model
summary(linear_model)
scatterplot(revol.util~ fico, data=df)
# fit linear model
linear_model <- lm(installment~ log.annual.inc, data=df)
# view summary of linear model
summary(linear_model)
scatterplot(installment~ log.annual.inc, data=df)
# fit linear model
linear_model <- lm(revol.util~ int.rate, data=df)
# view summary of linear model
summary(linear_model)
scatterplot(revol.util~ int.rate, data=df)
# fit linear model
linear_model <- lm(int.rate~ fico, data=df)
# view summary of linear model
summary(linear_model)
scatterplot(int.rate~ fico, data=df)
